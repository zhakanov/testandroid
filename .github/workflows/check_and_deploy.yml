name: Test and deploy

#Actions that will be executed when you push code currently none 

# on:
#   push:
#     branches:
#       - test1
on:
  pull_request:
    types: [ closed ]
    branches:
      - main

jobs:
 build_android:
   name: Build debug artifacts
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v2
      #  with:
      #    ref: ${{ github.event.pull_request.head.sha }}
      #  with:
    #      fetch-depth: '2'
    #  - name: Get changed files
    #    id: changed-files
    #    uses: tj-actions/changed-files@v23
    #  - name: count modified files
    #   #  id: data
    #    run: |
    #      echo ${{ steps.changed-files.outputs.All_changed_and_modified_files }} >> count
    #      wc -w count | awk '{print $1}'
    #      echo "count=$(wc -w count | awk '{print $1}')" >> $GITHUB_ENV
    #  - name: test
    #    if: ${{ env.count <= 5 }} 
    #    run: printenv

     - uses: technote-space/get-diff-action@v6
       id: shag
      #  with:
        #  CHECK_ONLY_COMMIT_WHEN_DRAFT: true
     - name: count
       if: ${{ steps.shag.outputs.count <=5 }} && failure()
       run: printenv
     - name: test step
       if: success() || failure()
       run: ls -lart

  

   
    #  - name: List all changed files
    #    run: |
    #      for file in ${{ steps.changed-files.outputs.All_changed_and_modified_files }}; do
    #       echo "$file was changed"
    #      done




# # name: Test and deploy

# # ## Actions that will be executed when you push code currently none
# # on:
# #   pull_request:
# #     types: [ closed ]
# #     branches:
# #       - main


# name: Test and deploy

# ## Actions that will be executed when you push code currently none
# # on:
# #   push:
# #     branches:
# #       - main

# on:
#   pull_request:
#     types: [ closed ]
#     branches:
#       - master

# jobs:
#  build_apk_aab:
#   #  if: startsWith(github.head_ref, 'release/') == true
#    name: Build release artifacts
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: permission to gradlew
#        run: chmod +x gradlew 
#      - name: Generate Release APK
#        run: ./gradlew assembleRelease
#      # - name: Sign APK
#      #   uses: r0adkll/sign-android-release@v1
#      #   # ID used to access action output
#      #   id: sign_app
#      #   with:
#      #    releaseDirectory: app/build/outputs/apk/release
#      #    signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#      #    alias: ${{ secrets.ALIAS }}
#      #    keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#      #    keyPassword: ${{ secrets.KEY_PASSWORD }}
#      - name: Upload APK
#        uses: actions/upload-artifact@v2
#        with:
#          name: app-release.apk
#          path: app/build/outputs/apk/release/app-release-unsigned.apk
